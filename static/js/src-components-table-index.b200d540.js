(window.webpackJsonp=window.webpackJsonp||[]).push([[4],{"./src/components/Table/index.mdx":function(e,n,t){"use strict";t.r(n),t.d(n,"default",(function(){return o}));var a=t("./node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js"),r=(t("react"),t("./node_modules/@mdx-js/react/dist/esm.js")),l={};function o(e){var n=e.components,t=Object(a.a)(e,["components"]);return Object(r.b)("wrapper",Object.assign({},l,t,{components:n,mdxType:"MDXLayout"}),Object(r.b)("h1",{id:"table-\u8868\u683c"},"Table \u8868\u683c"),Object(r.b)("h2",{id:"\u7528\u6cd5"},"\u7528\u6cd5"),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-sh"},"import 'react-app-polyfill/ie11'\nimport * as React from 'react'\nimport * as ReactDOM from 'react-dom'\nimport { SearchGroup, Table } from '../.'\nimport { Popconfirm, Button, Card } from 'antd'\nimport Layout from './layout'\nimport Mock from 'mockjs'\nimport axios from 'axios'\n\nMock.mock('/api/getList', 'get', {\n  msg: '\u6210\u529f',\n  state: 1,\n  total: 100,\n  'list|100': [\n    {\n      id: '@id',\n      name: '@name',\n      nickName: '@last',\n      phone: /^1[34578]\\d{9}$/,\n      'age|11-99': 1,\n      address: '@county(true)',\n      isMale: '@boolean',\n      email: '@email',\n      createTime: '@datetime',\n    },\n  ],\n})\n\nconst API = {\n  http_getProjectList: async function(req){\n    console.log('req', req)\n    return new Promise((resolve, reject) => {\n      axios.get('/api/getList').then(result => {\n        // console.log(result)\n        resolve(result.data)\n      }).catch(err => {\n        console.error(err)\n        reject(err)\n      })\n    })\n  }\n}\n\nconst App = () => {\n  const [searchParams, setSearchParams] = React.useState()\n  // \u641c\u7d22\u680f\u6570\u636e\n  const fields = [\n    { name: '\u59d3\u540d1', label: 'name1' },\n    { name: '\u59d3\u540d2', label: 'name2' },\n    { name: '\u59d3\u540d3', label: 'name3' },\n    { name: '\u59d3\u540d4', label: 'name4' },\n    {\n      name: '\u6027\u522b',\n      label: 'type',\n      type: 'select',\n      options: [\n        { label: '\u7537', value: '0' },\n        { label: '\u5973', value: '1' },\n      ],\n    },\n    { name: '\u65e5\u671f', label: 'date', type: 'datePicker' },\n    {\n      name: '\u65e5\u671f\u8303\u56f4',\n      label: ['messageDateBegin', 'messageDateEnd'],\n      type: 'rangePicker',\n    },\n  ]\n  // \u8868\u5355\u5217\u6570\u636e updateMethod \u5237\u65b0\u65b9\u6cd5\n  const getColumn = updateMethod => {\n    return [\n      {\n        title: \"\u59d3\u540d\",\n        dataIndex: \"name\",\n        key: \"name\",\n      },\n      {\n        title: \"\u624b\u673a\u53f7\",\n        dataIndex: \"phone\",\n        key: \"phone\",\n      },\n      {\n        title: \"\u5730\u5740\",\n        dataIndex: \"address\",\n        key: \"address\",\n      },\n      {\n        title: '\u64cd\u4f5c',\n        key: 'setting',\n        width: 200,\n        render: (text: any, record: any, index: number) => {\n          return (\n            <div>\n              <Button type=\"primary\" style={{ marginRight: '5px' }}>\u67e5\u770b</Button>\n              <Popconfirm\n                title=\"\u6b64\u64cd\u4f5c\u5c06\u6c38\u4e45\u5220\u9664\u8be5\u9879\u76ee, \u662f\u5426\u7ee7\u7eed?\"\n                okText=\"\u786e\u5b9a\"\n                cancelText=\"\u53d6\u6d88\"\n                onConfirm={() => {\n                  updateMethod()\n                }}\n              >\n                <Button danger>\u5220\u9664</Button>\n              </Popconfirm>\n            </div>\n          )\n        }\n      }\n    ];\n  }\n  // \u67e5\u8be2\n  const onSearch = (values) => {\n    setSearchParams(values)\n  }\n\n  return (\n    <Layout>\n      <SearchGroup fields={fields} onSearch={onSearch} extraParams={{ otherParams: '\u5176\u4ed6\u53c2\u6570\u503c' }} />\n      <Card style={{ marginTop: '10px' }}>\n        <Table\n          owncolumns={updatefunc => getColumn(updatefunc)}\n          queryAction={API.http_getProjectList}\n          baseProps={{ rowKey: record => record.id }}\n          params={searchParams}\n        />\n      </Card>\n    </Layout>\n  )\n}\n\nReactDOM.render(<App />, document.getElementById('root'))\n")),Object(r.b)("h2",{id:"api\u6587\u6863"},"API\u6587\u6863"),Object(r.b)("table",null,Object(r.b)("thead",{parentName:"table"},Object(r.b)("tr",{parentName:"thead"},Object(r.b)("th",{parentName:"tr",align:null},"\u5c5e\u6027"),Object(r.b)("th",{parentName:"tr",align:null},"\u7c7b\u578b"),Object(r.b)("th",{parentName:"tr",align:null},"\u9ed8\u8ba4\u503c"),Object(r.b)("th",{parentName:"tr",align:null},"\u5907\u6ce8"))),Object(r.b)("tbody",{parentName:"table"},Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",{parentName:"tr",align:null},"owncolumns"),Object(r.b)("td",{parentName:"tr",align:null},"(updatefunc:Function) : columns"),Object(r.b)("td",{parentName:"tr",align:null},"\u5fc5\u9009\u53c2\u6570"),Object(r.b)("td",{parentName:"tr",align:null},"updatefunc\u7528\u4e8e\u5237\u65b0\u5217\u8868")),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",{parentName:"tr",align:null},"queryAction"),Object(r.b)("td",{parentName:"tr",align:null},"(payload):Promise"),Object(r.b)("td",{parentName:"tr",align:null},"\u5fc5\u9009\u53c2\u6570"),Object(r.b)("td",{parentName:"tr",align:null},"\u7528\u4e8e\u5217\u8868\u6570\u636e\u83b7\u53d6")),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",{parentName:"tr",align:null},"baseProps"),Object(r.b)("td",{parentName:"tr",align:null},"TableProps from antd"),Object(r.b)("td",{parentName:"tr",align:null},"\u4efb\u9009"),Object(r.b)("td",{parentName:"tr",align:null},"antd\u7684\u57fa\u7840props")),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",{parentName:"tr",align:null},"params"),Object(r.b)("td",{parentName:"tr",align:null},"object"),Object(r.b)("td",{parentName:"tr",align:null},"{}"),Object(r.b)("td",{parentName:"tr",align:null},"\u8bf7\u6c42\u9644\u52a0\u53c2\u6570")))))}o&&o===Object(o)&&Object.isExtensible(o)&&Object.defineProperty(o,"__filemeta",{enumerable:!0,configurable:!0,value:{name:"MDXContent",filename:"src\\components\\Table\\index.mdx"}}),o.isMDXComponent=!0}}]);